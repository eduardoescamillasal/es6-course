//Events
/*
  - Any event that takes place in the DOM
  - Can be generated by an API
  - Many types of events
  - Event contains properties and methods
  - addEventListener function takes in the event to listen for,
    and a second argument to be called whenever the described event fires.
    - addEventListener("click", function(){
        logic inside function
    })
 */
 //Events
 /*
   - Any event that takes place in the DOM
   - Can be generated by an API
   - Many types of events
   - Event contains properties and methods
   - addEventListener function takes in the event to listen for,
     and a second argument to be called whenever the described event fires.
     - addEventListener("click", function(){
         logic inside function
     })
  */

/*
 const clickDiv = document.getElementById("clicky");
 const clickableButton = clickDiv.querySelector('button');

 clickableButton.addEventListener("click", logEvent);

 clickableButton.addEventListener("focus", logEvent);

 clickableButton.addEventListener("focusout", logEvent);

 function logEvent(e) {
   if(e.type === "click") {
     console.log("click");
   }
   if (e.type === "focus"){
     console.log("Focus");
   } else {
     return false;
   }
 }

 function logEvent(e) {
  clickableButton.innerText = e.timeStamp;
  console.log(e.type);
  clickableButton.removeEventListener("click", logEvent);
}

const bckgrnd = document.getElementById("background");
bckgrnd.addEventListener("mousedown", switchBackground);
bckgrnd.addEventListener("focusout", switchBackground)

function switchBackground(e) {
  if (e.type === "mousedown") {
    bckgrnd.classList.add("background-color");
  }
  else if ( e.type === "focusout") {
    bckgrnd.classList.remove("background-color");
  }
}

const bckgrnd = document.getElementById("background");
const listItemsUL = bckgrnd.querySelector("UL");
//const allLIs = bckgrnd.querySelectorAll("LI");

document.addEventListener("click", switchBackground);
listItemsUL.addEventListener("click", addGreenBackground);

function switchBackground(e) {
  const hasBeenClicked = bckgrnd.contains(e.target);
  if (hasBeenClicked) {
    bckgrnd.classList.add("background-color");
  } else {
    bckgrnd.classList.remove("background-color");
  }
};

function addGreenBackground(e) {
  e.stopPropagation();
  /*for(const prop of allLIs){
    prop.classList.remove("green");
  }*/
/*  const green = document.querySelector(".green");
  if (green) {
    green.classList.remove("green");
  }
  const targetLI = e.target;
  targetLI.classList.add('green');
}*/
/*
const clickDiv = document.getElementById("clicky");
const clickableButton = clickDiv.querySelector('button');

clickableButton.addEventListener("click", logEvent);

function logEvent(e) {
  clickableButton.innerText = e.timeStamp;
  console.log(e.type);
  clickableButton.removeEventListener("click", logEvent);
}

const bckgrnd = document.getElementById("background");
const listItemsUL = bckgrnd.querySelector("UL");
//const allLIs = bckgrnd.querySelectorAll("LI");

document.addEventListener("click", switchBackground);
listItemsUL.addEventListener("click", addGreenBackground);

function switchBackground(e) {
  const hasBeenClicked = bckgrnd.contains(e.target);
  if (hasBeenClicked) {
    bckgrnd.classList.add("background-color");
  } else {
    bckgrnd.classList.remove("background-color");
  }
};

function addGreenBackground(e) {
  e.stopPropagation();
  const targetLI = e.target;
  if (targetLI.nodeName === "UL") {
    return;
  }
  const green = document.querySelector(".green");
  if (green) {
    green.classList.remove("green");
  }

  targetLI.classList.add('green');
}
const bckgrnd2 = document.getElementById("background2");
const allLIs = bckgrnd2.querySelectorAll("li");
for(const prop of allLIs) {
  prop.addEventListener("click", function(event){
    console.log(this);
  })
}
  */
  const clickDiv = document.getElementById("clicky");
  const clickableButton = clickDiv.querySelector('button');

  clickableButton.addEventListener("click", logEvent);

  function logEvent(e) {
    clickableButton.innerText = e.timeStamp;
    console.log(e.type);
    clickableButton.removeEventListener("click", logEvent);
  }

  const bckgrnd = document.getElementById("background");
  const listItemsUL = bckgrnd.querySelector("UL");
  //const allLIs = bckgrnd.querySelectorAll("LI");

  document.addEventListener("click", switchBackground);
  listItemsUL.addEventListener("click", addGreenBackground);

  function switchBackground(e) {
    const hasBeenClicked = bckgrnd.contains(e.target);
    if (hasBeenClicked) {
      bckgrnd.classList.add("background-color");
    } else {
      bckgrnd.classList.remove("background-color");
    }
  };

  function addGreenBackground(e) {
    e.stopPropagation();
    const targetLI = e.target;
    if (targetLI.nodeName === "UL") {
      return;
    }
    const green = document.querySelector(".green");
    if (green) {
      green.classList.remove("green");
    }

    targetLI.classList.add('green');
  }


  const div2 = document.getElementById("div2");
  const myForm = document.getElementById("myForm");

  myForm.addEventListener("submit", addToList);

  function addToList(e) {
    e.preventDefault();
    const myInput = document.getElementById("myInput").value;
    const newLI = document.createElement("li");
    newLI.innerText=myInput;
    listItemsUL.appendChild(newLI);
    myForm.reset();
  }

  const div3 = document.getElementById("div3");
  const para = div3.querySelector("p");
  const textArea = div3.querySelector("textarea");
  const paraText = "User is typing";
  let timer;
  let count = 0;

  textArea.addEventListener("keydown", addText);
  textArea.addEventListener("keyup", removeText);

  function addText(e) {
    para.innerText = paraText;
  }

  function removeText(e) {
    count += 1;
    console.log(count);
    clearTimeout(timer);
    timer = setTimeout(() => {
    para.innerText = "";
    },1000)
  }
